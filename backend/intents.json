[
    {
        "name": "largest_expenses",
        "description": "To identify the largest individual expenses",
        "example_queries": [
            "What was my biggest purchase last month?",
            "Show my largest transactions",
            "Find my most expensive purchases",
            "What are my top 5 largest transactions?",
            "Which purchases cost me the most money?"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "time_period",
            "top_n",
            "category",
            "account_id"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?transaction ?date ?amount ?currency ?merchant_name ?description\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nORDER BY DESC(?amount)\nLIMIT {{top_n|default:10}}",
        "response_template": "Largest Expenses{{#if time_period}} during {{time_period.label}}{{/if}}{{#if category}} in {{category}}{{/if}}:\n{{#each transactions}}\n- {{date}}: {{amount}} {{currency}} at {{merchant_name}}{{#if description}} - {{description}}{{/if}}\n{{/each}}\n\nTotal of top expenses: {{total_amount}} {{currency}}\nAverage amount: {{avg_amount}} {{currency}}"
    },
    {
        "name": "spending_anomalies",
        "description": "To identify unusual spending patterns",
        "example_queries": [
            "Any unusual transactions recently?",
            "Have I spent more than normal on food?",
            "Find suspicious transactions",
            "Show spending that doesn't match my patterns",
            "Identify outliers in my expenses"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "time_period",
            "threshold",
            "category",
            "account_id"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if category}}\n# Category-specific anomaly detection\nSELECT \n  ?transaction ?date ?amount ?currency ?merchant_name ?description \n  ?avg_category_expense ?stddev_category ?deviation_factor\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n  \n  # Filter by category and get category stats\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  \n  # Calculate category statistics\n  {\n    SELECT (AVG(?hist_amount) AS ?avg_category_expense) (STDEV(?hist_amount) AS ?stddev_category)\n    WHERE {\n      # Get historical data for the same customer/category\n      ?customer exs:hasName \"{{customer_name}}\" .\n      ?customer exs:hasAccount ?hist_account .\n      \n      ?hist_transaction a exs:FinancialTransaction .\n      ?hist_transaction exs:hasParticipant ?hist_payerRole .\n      ?hist_payerRole a exs:Payer .\n      ?hist_payerRole exs:isPlayedBy ?hist_account .\n      \n      ?hist_transaction exs:hasMonetaryAmount ?hist_amount_uri .\n      ?hist_amount_uri exs:amount ?hist_amount .\n      ?hist_transaction exs:hasTransactionDate ?hist_date .\n      \n      # Get at least 6 months of history or more\n      FILTER(?hist_date >= \"{{time_period.start}}\"^^xsd:date - \"P180D\"^^xsd:duration && ?hist_date < \"{{time_period.start}}\"^^xsd:date)\n      \n      # Match the same category\n      ?hist_transaction exs:hasReceipt ?hist_receipt .\n      ?hist_receipt exs:hasLineItem ?hist_lineItem .\n      ?hist_lineItem exs:hasProduct ?hist_product .\n      ?hist_product exs:category ?hist_productCategory .\n      \n      ?hist_productCategory rdfs:label ?hist_categoryLabel .\n      OPTIONAL { ?hist_productCategory exs:parentCategory* ?hist_parentCategory . ?hist_parentCategory rdfs:label ?hist_parentCategoryLabel }\n      \n      FILTER(CONTAINS(LCASE(?hist_categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?hist_parentCategoryLabel), LCASE(\"{{category}}\")))\n    }\n  }\n  \n  # Calculate how many standard deviations this transaction is from the mean\n  BIND(ABS(?amount - ?avg_category_expense) / ?stddev_category AS ?deviation_factor)\n  \n  # Filter for anomalies based on deviation threshold\n  FILTER(?deviation_factor >= {{threshold|default:2}})\n}\nORDER BY DESC(?deviation_factor)\n\n{{else}}\n# General anomaly detection\nSELECT \n  ?transaction ?date ?amount ?currency ?merchant_name ?description \n  ?merchant_avg_amount ?merchant_stddev ?deviation_factor\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n  \n  # Calculate merchant-specific statistics\n  {\n    SELECT ?merchant (AVG(?hist_amount) AS ?merchant_avg_amount) (STDEV(?hist_amount) AS ?merchant_stddev)\n    WHERE {\n      # Get historical data for same customer/merchant pairs\n      ?customer exs:hasName \"{{customer_name}}\" .\n      ?customer exs:hasAccount ?hist_account .\n      \n      ?hist_transaction a exs:FinancialTransaction .\n      ?hist_transaction exs:hasParticipant ?hist_payerRole .\n      ?hist_payerRole a exs:Payer .\n      ?hist_payerRole exs:isPlayedBy ?hist_account .\n      \n      ?hist_transaction exs:hasMonetaryAmount ?hist_amount_uri .\n      ?hist_amount_uri exs:amount ?hist_amount .\n      ?hist_transaction exs:hasTransactionDate ?hist_date .\n      \n      # Get at least 6 months of history or more\n      FILTER(?hist_date >= \"{{time_period.start}}\"^^xsd:date - \"P180D\"^^xsd:duration && ?hist_date < \"{{time_period.start}}\"^^xsd:date)\n      \n      # Match the same merchant\n      ?hist_transaction exs:hasParticipant ?hist_payeeRole .\n      ?hist_payeeRole a exs:Payee .\n      ?hist_payeeRole exs:isPlayedBy ?merchant .\n    }\n    GROUP BY ?merchant\n    HAVING (COUNT(?hist_transaction) >= 3) # Need at least 3 previous transactions for meaningful stats\n  }\n  \n  # Calculate how many standard deviations this transaction is from the mean for this merchant\n  BIND(ABS(?amount - ?merchant_avg_amount) / ?merchant_stddev AS ?deviation_factor)\n  \n  # Filter for anomalies based on deviation threshold\n  FILTER(?deviation_factor >= {{threshold|default:2}})\n}\nORDER BY DESC(?deviation_factor)\n{{/if}}",
        "response_template": "Unusual Spending Patterns Detected{{#if time_period}} during {{time_period.label}}{{/if}}{{#if category}} in {{category}}{{/if}}:\n\n{{#each anomalies}}\n- {{date}}: {{amount}} {{currency}} at {{merchant_name}}{{#if description}} - {{description}}{{/if}}\n  This is {{deviation_factor}}x times {{deviation_description}} your normal spending{{#if category}} in this category{{else}} at this merchant{{/if}}.\n{{/each}}\n\n{{#if anomalies.length}}\nDetected {{anomalies.length}} unusual transactions with threshold of {{threshold|default:2}} standard deviations.\n{{else}}\nNo unusual spending patterns detected with threshold of {{threshold|default:2}} standard deviations.\n{{/if}}\n\nInsight: {{anomaly_insight}}"
    },
    {
        "name": "card_usage",
        "description": "To analyze payment card usage patterns",
        "example_queries": [
            "How often do I use my Visa card?",
            "Which card do I use most for shopping?",
            "Show me my credit card usage",
            "Where do I typically use my debit card?",
            "What's my payment card activity?"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "card_id",
            "merchant_type",
            "time_period"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if card_id}}\n# Analysis of a specific card\nSELECT \n  ?transaction ?date ?amount ?currency ?merchant_name ?description \n  ?card_number ?card_type ?card_issuer\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get the specific card\n  ?customer exs:hasPaymentCard ?card .\n  FILTER(STR(?card) = \"{{card_id}}\")\n  \n  # Get card details\n  ?card exs:cardNumber ?card_number .\n  ?card a ?card_type .\n  OPTIONAL { ?card exs:hasIssuer ?issuer . ?issuer rdfs:label ?card_issuer }\n  \n  # Link card to account\n  ?card exs:linkedAccount ?account .\n  \n  # Find transactions through the linked account\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if merchant_type}}\n  # Filter by merchant type if specified\n  ?merchant a ?merchantType .\n  FILTER(STR(?merchantType) = \"{{merchant_type}}\")\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nORDER BY DESC(?date)\n\n{{else}}\n# Card usage summary for all cards\nSELECT \n  ?card ?card_number ?card_type ?card_issuer \n  (COUNT(?transaction) AS ?transaction_count) \n  (SUM(?amount) AS ?total_spent) \n  (MIN(?date) AS ?earliest_transaction) \n  (MAX(?date) AS ?latest_transaction) \n  (COUNT(DISTINCT ?merchant) AS ?merchant_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get all cards\n  ?customer exs:hasPaymentCard ?card .\n  \n  # Get card details\n  ?card exs:cardNumber ?card_number .\n  ?card a ?card_type .\n  OPTIONAL { ?card exs:hasIssuer ?issuer . ?issuer rdfs:label ?card_issuer }\n  \n  # Link card to account\n  ?card exs:linkedAccount ?account .\n  \n  # Find transactions through the linked account\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  \n  {{#if merchant_type}}\n  # Filter by merchant type if specified\n  ?merchant a ?merchantType .\n  FILTER(STR(?merchantType) = \"{{merchant_type}}\")\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?card ?card_number ?card_type ?card_issuer\nORDER BY DESC(?transaction_count)\n\nUNION\n\n# Top merchants by card\nSELECT \n  ?card_number \n  ?merchant_name \n  (COUNT(?transaction) AS ?transaction_count) \n  (SUM(?amount) AS ?total_spent) \n  (MAX(?date) AS ?latest_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get all cards\n  ?customer exs:hasPaymentCard ?card .\n  ?card exs:cardNumber ?card_number .\n  \n  # Link card to account\n  ?card exs:linkedAccount ?account .\n  \n  # Find transactions through the linked account\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if merchant_type}}\n  # Filter by merchant type if specified\n  ?merchant a ?merchantType .\n  FILTER(STR(?merchantType) = \"{{merchant_type}}\")\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?card_number ?merchant_name\nORDER BY ?card_number DESC(?transaction_count)\nLIMIT 20\n{{/if}}",
        "response_template": "{{#if card_id}}\nActivity for Card {{card_number}} ({{card_type}}){{#if card_issuer}} issued by {{card_issuer}}{{/if}}:\n\n{{#each transactions}}\n- {{date}}: {{amount}} {{currency}} at {{merchant_name}}{{#if description}} - {{description}}{{/if}}\n{{/each}}\n\nSummary:\n- Total transactions: {{transaction_count}}\n- Total spent: {{total_spent}} CHF\n- Most frequent merchant: {{most_frequent_merchant}} ({{merchant_frequency}} transactions)\n{{else}}\nPayment Card Usage Summary{{#if time_period}} for {{time_period.label}}{{/if}}:\n\n{{#each cards}}\n- Card: {{card_number}} ({{card_type}}){{#if card_issuer}} by {{card_issuer}}{{/if}}\n  Transactions: {{transaction_count}} | Total: {{total_spent}} CHF | Merchants: {{merchant_count}}\n  Last used: {{latest_transaction}}\n{{/each}}\n\nTop merchants by card:\n{{#each top_merchants}}\n- Card {{card_number}} at {{merchant_name}}: {{transaction_count}} transactions ({{total_spent}} CHF)\n{{/each}}\n\nInsight: {{card_usage_insight}}\n{{/if}}"
    },
    {
        "name": "international_transactions",
        "description": "To analyze foreign currency transactions",
        "example_queries": [
            "Show my spending abroad",
            "What exchange rates did I get in my foreign purchases?",
            "How much have I spent in foreign currencies?",
            "Display my international transactions",
            "What countries have I made purchases in?"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "currency",
            "time_period",
            "country"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if currency}}\n# Transactions in a specific foreign currency\nSELECT \n  ?transaction ?date ?amount ?currency ?merchant_name ?exchange_rate ?original_amount ?chf_equivalent ?description\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?original_amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  \n  # Filter for the specific foreign currency\n  FILTER(STR(?currency) = \"{{currency}}\")\n  \n  # Get transaction date\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  # Get exchange rate information if available\n  OPTIONAL {\n    ?transaction exs:hasExchangeRateInfo ?exchange_info .\n    ?exchange_info exs:rate ?exchange_rate .\n    ?exchange_info exs:convertedAmount ?amount .\n  }\n  \n  # Calculate CHF equivalent if not directly provided\n  BIND(COALESCE(?amount, ?original_amount * ?exchange_rate) AS ?chf_equivalent)\n  \n  {{#if country}}\n  # Filter by country if specified\n  ?merchant exs:hasAddress ?address .\n  ?address exs:country ?country_name .\n  FILTER(CONTAINS(LCASE(?country_name), LCASE(\"{{country}}\")))\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nORDER BY DESC(?date)\n\n{{else}}\n# All foreign currency transactions\nSELECT \n  ?currency_name \n  (COUNT(?transaction) AS ?transaction_count) \n  (SUM(?original_amount) AS ?total_original) \n  (SUM(?chf_equivalent) AS ?total_chf) \n  (AVG(?exchange_rate) AS ?avg_rate) \n  (MIN(?date) AS ?earliest_transaction) \n  (MAX(?date) AS ?latest_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?original_amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?currency rdfs:label ?currency_name .\n  \n  # Filter for foreign currencies (not CHF)\n  FILTER(?currency != ex:Swiss_franc)\n  \n  # Get transaction date\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get exchange rate information if available\n  OPTIONAL {\n    ?transaction exs:hasExchangeRateInfo ?exchange_info .\n    ?exchange_info exs:rate ?exchange_rate .\n    ?exchange_info exs:convertedAmount ?chf_amount .\n  }\n  \n  # Calculate CHF equivalent if not directly provided\n  BIND(COALESCE(?chf_amount, ?original_amount * ?exchange_rate) AS ?chf_equivalent)\n  \n  {{#if country}}\n  # Filter by country if specified\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant exs:hasAddress ?address .\n  ?address exs:country ?country_name .\n  FILTER(CONTAINS(LCASE(?country_name), LCASE(\"{{country}}\")))\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?currency_name\nORDER BY DESC(?total_chf)\n\nUNION\n\n# Country analysis for foreign transactions\nSELECT \n  ?country_name \n  (COUNT(?transaction) AS ?transaction_count) \n  (SUM(?chf_equivalent) AS ?total_spent_chf) \n  (COUNT(DISTINCT ?currency) AS ?currency_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?original_amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  \n  # Filter for foreign currencies (not CHF)\n  FILTER(?currency != ex:Swiss_franc)\n  \n  # Get transaction date\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get exchange rate information if available\n  OPTIONAL {\n    ?transaction exs:hasExchangeRateInfo ?exchange_info .\n    ?exchange_info exs:rate ?exchange_rate .\n    ?exchange_info exs:convertedAmount ?chf_amount .\n  }\n  \n  # Calculate CHF equivalent if not directly provided\n  BIND(COALESCE(?chf_amount, ?original_amount * ?exchange_rate) AS ?chf_equivalent)\n  \n  # Get country information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant exs:hasAddress ?address .\n  ?address exs:country ?country_name .\n  \n  {{#if country}}\n  # Filter by country if specified\n  FILTER(CONTAINS(LCASE(?country_name), LCASE(\"{{country}}\")))\n  {{/if}}\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?country_name\nORDER BY DESC(?total_spent_chf)\n{{/if}}",
        "response_template": "{{#if currency}}\nTransactions in {{currency}}{{#if time_period}} during {{time_period.label}}{{/if}}{{#if country}} in {{country}}{{/if}}:\n\n{{#each transactions}}\n- {{date}}: {{original_amount}} {{currency}} ({{chf_equivalent}} CHF) at {{merchant_name}}\n  Exchange rate: {{exchange_rate}}{{#if description}} - {{description}}{{/if}}\n{{/each}}\n\nSummary:\n- Total spent: {{total_original}} {{currency}} ({{total_chf}} CHF)\n- Average exchange rate: {{avg_exchange_rate}}\n- Transaction count: {{transaction_count}}\n{{else}}\nForeign Currency Transactions{{#if time_period}} during {{time_period.label}}{{/if}}{{#if country}} in {{country}}{{/if}}:\n\nBy Currency:\n{{#each currencies}}\n- {{currency_name}}: {{transaction_count}} transactions\n  Total: {{total_original}} {{currency_name}} ({{total_chf}} CHF)\n  Average rate: {{avg_rate}}\n{{/each}}\n\nBy Country:\n{{#each countries}}\n- {{country_name}}: {{transaction_count}} transactions\n  Total spent: {{total_spent_chf}} CHF\n  Currencies used: {{currency_count}}\n{{/each}}\n\nTotal foreign spending: {{total_foreign_chf}} CHF\nTotal countries visited: {{country_count}}\n\nInsight: {{international_insight}}\n{{/if}}"
    },
    {
        "name": "monthly_summary",
        "description": "To provide a comprehensive monthly financial summary",
        "example_queries": [
            "Summarize my finances for March",
            "Give me a monthly overview",
            "What was my financial activity in January?",
            "Show me my monthly summary",
            "Provide a financial report for last month"
        ],
        "required_parameters": [
            "customer_id",
            "month"
        ],
        "optional_parameters": [
            "year",
            "include_balance"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n# Income and Expenses Summary\nSELECT \n  (SUM(IF(?is_expense, ?amount, 0)) AS ?total_expenses) \n  (SUM(IF(?is_income, ?amount, 0)) AS ?total_income) \n  (COUNT(IF(?is_expense, ?transaction, undef)) AS ?expense_count) \n  (COUNT(IF(?is_income, ?transaction, undef)) AS ?income_count) \n  (MAX(?date) AS ?latest_transaction_date) \n  (MIN(?date) AS ?earliest_transaction_date)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole exs:isPlayedBy ?entity .\n  \n  # Determine if transaction is expense or income\n  BIND(?entity = ?account AS ?is_expense)\n  BIND(?entity != ?account AS ?is_income)\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by month/year\n  FILTER(MONTH(?date) = {{month}} && YEAR(?date) = {{year|default:2023}})\n}\n\nUNION\n\n# Top Expense Categories\nSELECT \n  ?category_name \n  (SUM(?item_amount) AS ?category_total) \n  (COUNT(DISTINCT ?transaction) AS ?transaction_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Get main category (highest level)\n  OPTIONAL {\n    ?productCategory exs:parentCategory* ?parentCategory .\n    # Check if it's a top-level category (no further parent)\n    FILTER NOT EXISTS { ?parentCategory exs:parentCategory ?higherCategory }\n    ?parentCategory rdfs:label ?category_name\n  }\n  \n  # If no parent category is found, use the direct category\n  BIND(COALESCE(?category_name, ?productCategory) AS ?category_name)\n  \n  # Filter by month/year\n  FILTER(MONTH(?date) = {{month}} && YEAR(?date) = {{year|default:2023}})\n}\nGROUP BY ?category_name\nORDER BY DESC(?category_total)\nLIMIT 5\n\nUNION\n\n# Top Merchants\nSELECT \n  ?merchant_name \n  (SUM(?amount) AS ?merchant_total) \n  (COUNT(?transaction) AS ?transaction_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  # Filter by month/year\n  FILTER(MONTH(?date) = {{month}} && YEAR(?date) = {{year|default:2023}})\n}\nGROUP BY ?merchant_name\nORDER BY DESC(?merchant_total)\nLIMIT 5\n\n{{#if include_balance}}\nUNION\n\n# Account Balances\nSELECT \n  ?account_type \n  ?account_number \n  ?balance \n  ?currency\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  ?account a ?account_type .\n  \n  # Get account details\n  ?account exs:hasInitialBalance ?initial_balance .\n  ?account exs:hasCurrency ?currency .\n  OPTIONAL { ?account exs:accountNumber ?account_number }\n  \n  # Calculate end-of-month balance by adding/subtracting transactions\n  {\n    SELECT ?account ((?initial_balance - SUM(IF(?is_expense, ?amount, 0)) + SUM(IF(?is_income, ?amount, 0))) AS ?balance)\n    WHERE {\n      # Find transactions for this account\n      ?transaction a exs:FinancialTransaction .\n      ?transaction exs:hasParticipant ?role .\n      ?role exs:isPlayedBy ?entity .\n      \n      # Determine if transaction is expense or income for this account\n      BIND(?entity = ?account && ?role a exs:Payer AS ?is_expense)\n      BIND(?entity = ?account && ?role a exs:Payee AS ?is_income)\n      \n      # Get transaction amount\n      ?transaction exs:hasMonetaryAmount ?amount_uri .\n      ?amount_uri exs:amount ?amount .\n      ?transaction exs:hasTransactionDate ?date .\n      \n      # Include all transactions up to the end of the specified month\n      FILTER(YEAR(?date) <= {{year|default:2023}} && \n             (YEAR(?date) < {{year|default:2023}} || MONTH(?date) <= {{month}}))\n    }\n    GROUP BY ?account\n  }\n}\nORDER BY ?account_type\n{{/if}}\n\nUNION\n\n# Day-by-day spending pattern\nSELECT \n  ?day \n  (SUM(?amount) AS ?daily_total) \n  (COUNT(?transaction) AS ?transaction_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Extract day number\n  BIND(DAY(?date) AS ?day)\n  \n  # Filter by month/year\n  FILTER(MONTH(?date) = {{month}} && YEAR(?date) = {{year|default:2023}})\n}\nGROUP BY ?day\nORDER BY ?day",
        "response_template": "Monthly Financial Summary for {{month_name}} {{year|default:2023}}:\n\nOverview:\n- Total Income: {{total_income}} CHF ({{income_count}} transactions)\n- Total Expenses: {{total_expenses}} CHF ({{expense_count}} transactions)\n- Net Cash Flow: {{net_cash_flow}} CHF\n- Active Period: {{earliest_transaction_date}} to {{latest_transaction_date}}\n\nTop Expense Categories:\n{{#each categories}}\n- {{category_name}}: {{category_total}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\nTop Merchants:\n{{#each merchants}}\n- {{merchant_name}}: {{merchant_total}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\n{{#if include_balance}}\nAccount Balances (End of Month):\n{{#each accounts}}\n- {{account_type}}: {{balance}} {{currency}}{{#if account_number}} ({{account_number}}){{/if}}\n{{/each}}\n{{/if}}\n\nDaily Spending Pattern:\n{{daily_spending_chart}}\n\nInsight: {{monthly_insight}}"
    },
    {
        "name": "average_spending",
        "description": "To calculate average spending in various categories",
        "example_queries": [
            "What's my average grocery bill?",
            "How much do I typically spend on restaurants?",
            "What's my usual monthly spending on electronics?",
            "Calculate my average utility costs",
            "What do I spend on entertainment on average?"
        ],
        "required_parameters": [
            "customer_id",
            "category"
        ],
        "optional_parameters": [
            "time_period",
            "frequency"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if frequency}}\n# Time-based frequency analysis\nSELECT \n  ?time_unit \n  (AVG(?period_total) AS ?average_amount) \n  (MIN(?period_total) AS ?min_amount) \n  (MAX(?period_total) AS ?max_amount) \n  (STDEV(?period_total) AS ?stddev_amount) \n  (COUNT(?period_total) AS ?period_count)\nWHERE {\n  {\n    SELECT ?time_unit (SUM(?item_amount) AS ?period_total)\n    WHERE {\n      # Find the customer\n      ?customer exs:hasName \"{{customer_name}}\" .\n      \n      # Get their accounts\n      ?customer exs:hasAccount ?account .\n      \n      # Find transactions with receipts\n      ?transaction a exs:FinancialTransaction .\n      ?transaction exs:hasParticipant ?payerRole .\n      ?payerRole a exs:Payer .\n      ?payerRole exs:isPlayedBy ?account .\n      ?transaction exs:hasTransactionDate ?date .\n      \n      # Get receipt information\n      ?transaction exs:hasReceipt ?receipt .\n      ?receipt exs:hasLineItem ?lineItem .\n      ?lineItem exs:hasProduct ?product .\n      ?lineItem exs:hasPrice ?price_uri .\n      ?price_uri exs:amount ?item_amount .\n      \n      # Get product category information\n      ?product exs:category ?productCategory .\n      \n      # Navigate up the category hierarchy if needed\n      ?productCategory rdfs:label ?categoryLabel .\n      OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n      \n      # Filter by category or its parents\n      FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n      \n      {{#if time_period}}\n      # Filter by time period if specified\n      FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n      {{/if}}\n      \n      # Calculate time units based on frequency\n      {{#if_eq frequency \"daily\"}}\n      BIND(CONCAT(STR(YEAR(?date)), \"-\", STR(MONTH(?date)), \"-\", STR(DAY(?date))) AS ?time_unit)\n      {{/if_eq}}\n      \n      {{#if_eq frequency \"weekly\"}}\n      # Approximate weeks by dividing days by 7 and grouping\n      BIND(CONCAT(STR(YEAR(?date)), \"-W\", STR(FLOOR((DAY(?date) + (DAY(CONCAT(STR(YEAR(?date)), \"-\", STR(MONTH(?date)), \"-01\"^^xsd:date)) - 1)) / 7) + 1)) AS ?time_unit)\n      {{/if_eq}}\n      \n      {{#if_eq frequency \"monthly\"}}\n      BIND(CONCAT(STR(YEAR(?date)), \"-\", STR(MONTH(?date))) AS ?time_unit)\n      {{/if_eq}}\n      \n      {{#if_eq frequency \"quarterly\"}}\n      BIND(CONCAT(STR(YEAR(?date)), \"-Q\", STR(CEIL(MONTH(?date) / 3))) AS ?time_unit)\n      {{/if_eq}}\n      \n      {{#if_eq frequency \"yearly\"}}\n      BIND(STR(YEAR(?date)) AS ?time_unit)\n      {{/if_eq}}\n    }\n    GROUP BY ?time_unit\n  }\n}\n\nUNION\n\n# Transaction-level statistics\nSELECT \n  (AVG(?item_amount) AS ?average_transaction) \n  (MIN(?item_amount) AS ?min_transaction) \n  (MAX(?item_amount) AS ?max_transaction) \n  (COUNT(?transaction) AS ?transaction_count) \n  (COUNT(DISTINCT ?date) AS ?days_with_transactions)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\n\n{{else}}\n# Simple category average\nSELECT \n  (SUM(?item_amount) AS ?total_amount) \n  (COUNT(?transaction) AS ?transaction_count) \n  (COUNT(?lineItem) AS ?item_count) \n  (COUNT(DISTINCT ?date) AS ?days_with_purchases) \n  (MIN(?date) AS ?first_purchase) \n  (MAX(?date) AS ?last_purchase) \n  (AVG(?item_amount) AS ?average_per_item) \n  (SUM(?item_amount) / COUNT(DISTINCT ?date) AS ?average_per_day) \n  (SUM(?item_amount) / (CEIL((?max_date - ?min_date) / 30) + 1) AS ?average_per_month)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  BIND(\"{{time_period.start}}\"^^xsd:date AS ?min_date)\n  BIND(\"{{time_period.end}}\"^^xsd:date AS ?max_date)\n  {{else}}\n  # Calculate date range for all data\n  {\n    SELECT (MIN(?earliest) AS ?min_date) (MAX(?latest) AS ?max_date)\n    WHERE {\n      ?customer exs:hasName \"{{customer_name}}\" .\n      ?customer exs:hasAccount ?account .\n      ?transaction a exs:FinancialTransaction .\n      ?transaction exs:hasParticipant ?payerRole .\n      ?payerRole a exs:Payer .\n      ?payerRole exs:isPlayedBy ?account .\n      ?transaction exs:hasTransactionDate ?earliest .\n      ?transaction exs:hasTransactionDate ?latest .\n    }\n  }\n  {{/if}}\n}\n\nUNION\n\n# Top purchased products in this category\nSELECT \n  ?product_name \n  (COUNT(?lineItem) AS ?purchase_count) \n  (SUM(?item_amount) AS ?total_spent) \n  (AVG(?item_amount) AS ?average_price)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product rdfs:label ?product_name .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?product_name\nORDER BY DESC(?purchase_count)\nLIMIT 5\n{{/if}}",
        "response_template": "{{#if frequency}}\nAverage {{category}} Spending ({{frequency}} frequency):\n\n- Average per {{frequency}}: {{average_amount}} CHF\n- Lowest {{frequency}}: {{min_amount}} CHF\n- Highest {{frequency}}: {{max_amount}} CHF\n- Standard deviation: {{stddev_amount}} CHF\n- Number of {{frequency}} periods analyzed: {{period_count}}\n\nTransaction Statistics:\n- Average transaction: {{average_transaction}} CHF\n- Smallest transaction: {{min_transaction}} CHF\n- Largest transaction: {{max_transaction}} CHF\n- Total transactions: {{transaction_count}}\n- Days with transactions: {{days_with_transactions}}\n\n{{else}}\nAverage {{category}} Spending:\n\n- Per transaction: {{average_per_item}} CHF\n- Per day: {{average_per_day}} CHF\n- Per month: {{average_per_month}} CHF\n\nSummary:\n- Total spent: {{total_amount}} CHF\n- Number of transactions: {{transaction_count}}\n- Number of items: {{item_count}}\n- Days with purchases: {{days_with_purchases}}\n- Period analyzed: {{first_purchase}} to {{last_purchase}}\n\nMost Frequently Purchased Items:\n{{#each products}}\n- {{product_name}}: {{purchase_count}} times (avg. {{average_price}} CHF)\n{{/each}}\n{{/if}}\n\nInsight: {{spending_insight}}"
    },
    {
        "name": "account_overview",
        "description": "To retrieve a summary of all accounts owned by the customer",
        "example_queries": [
            "Show me all my accounts",
            "What accounts do I have?",
            "List my accounts",
            "Show my bank accounts",
            "What's my account summary?"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "account_type"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?account ?type ?balance ?currency ?accountNumber\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  ?account a ?type .\n  \n  {{#if account_type}}\n  # Filter by account type if specified\n  FILTER(?type = exs:{{account_type}})\n  {{/if}}\n  \n  # Get account details\n  ?account exs:hasInitialBalance ?balance .\n  ?account exs:hasCurrency ?currency .\n  OPTIONAL { ?account exs:accountNumber ?accountNumber }\n}\nORDER BY ?type",
        "response_template": "Here are your accounts:\n{{#each accounts}}\n- {{type}}: {{balance}} {{currency}} (Account #: {{accountNumber}})\n{{/each}}"
    },
    {
        "name": "account_balance_check",
        "description": "To check the balance of a specific account",
        "example_queries": [
            "What's my checking account balance?",
            "How much money do I have in my savings?",
            "Check my credit card balance",
            "What's my account balance?",
            "How much is in my retirement account?"
        ],
        "required_parameters": [
            "customer_id",
            "account_type"
        ],
        "optional_parameters": [],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?balance ?currency ?accountNumber\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get the specific account type\n  ?customer exs:hasAccount ?account .\n  ?account a exs:{{account_type}} .\n  \n  # Get account details\n  ?account exs:hasInitialBalance ?balance .\n  ?account exs:hasCurrency ?currency .\n  OPTIONAL { ?account exs:accountNumber ?accountNumber }\n}",
        "response_template": "Your {{account_type}} balance is {{balance}} {{currency}}."
    },
    {
        "name": "account_details",
        "description": "To get detailed information about a specific account",
        "example_queries": [
            "Tell me about my credit card",
            "Show my account details",
            "What are the details of my checking account?",
            "Give me more information about my savings account",
            "Tell me everything about my retirement account"
        ],
        "required_parameters": [
            "customer_id",
            "account_id"
        ],
        "optional_parameters": [
            "detail_type"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?account ?type ?balance ?currency ?accountNumber ?iban ?overdraftLimit ?provider ?providerName\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get the specific account\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Get account type\n  ?account a ?type .\n  \n  # Get basic account details\n  ?account exs:hasInitialBalance ?balance .\n  ?account exs:hasCurrency ?currency .\n  \n  # Get additional account details\n  OPTIONAL { ?account exs:accountNumber ?accountNumber }\n  OPTIONAL { ?account exs:hasInternationalBankAccountIdentifier ?iban }\n  OPTIONAL { ?account exs:hasOverdraftLimit ?overdraftLimit }\n  \n  # Get account provider details\n  OPTIONAL {\n    ?account exs:hasAccountProvider ?providerRole .\n    ?providerRole exs:isPlayedBy ?provider .\n    ?provider rdfs:label ?providerName\n  }\n}",
        "response_template": "Account Details:\n- Type: {{type}}\n- Balance: {{balance}} {{currency}}\n- Account Number: {{accountNumber}}\n- IBAN: {{iban}}\n- Provider: {{providerName}}\n{{#if overdraftLimit}}\n- Overdraft Limit: {{overdraftLimit}} {{currency}}\n{{/if}}"
    },
    {
        "name": "recent_transactions",
        "description": "To view recent financial activities across accounts",
        "example_queries": [
            "Show my recent transactions",
            "What were my last 5 purchases?",
            "Show me my latest spending",
            "What transactions have I made recently?",
            "Display my recent account activity"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "time_period",
            "limit",
            "account_id"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?transaction ?date ?amount ?currency ?merchant_name ?description\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nORDER BY DESC(?date)\nLIMIT {{limit|default:10}}",
        "response_template": "Recent Transactions:\n{{#each transactions}}\n- {{date}}: {{amount}} {{currency}} at {{merchant_name}}{{#if description}} - {{description}}{{/if}}\n{{/each}}"
    },
    {
        "name": "merchant_transactions",
        "description": "To find transactions with specific merchants",
        "example_queries": [
            "Show my transactions at Migros",
            "How much have I spent at Amazon?",
            "List all my purchases from Coop",
            "What have I bought from Starbucks?",
            "Show my spending at Apple Store"
        ],
        "required_parameters": [
            "customer_id",
            "merchant_name"
        ],
        "optional_parameters": [
            "time_period"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?transaction ?date ?amount ?currency ?merchant_name ?description\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information and filter by name\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  # Filter by merchant name\n  FILTER(CONTAINS(LCASE(?merchant_name), LCASE(\"{{merchant_name}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nORDER BY DESC(?date)",
        "response_template": "Transactions at {{merchant_name}}:\n{{#each transactions}}\n- {{date}}: {{amount}} {{currency}}{{#if description}} - {{description}}{{/if}}\n{{/each}}\n\nTotal: {{total_amount}} {{currency}}"
    },
    {
        "name": "transaction_search",
        "description": "To find specific transactions based on multiple criteria",
        "example_queries": [
            "Find transactions over 100 CHF",
            "Show my grocery purchases last month",
            "Find payments between 50 and 200 francs",
            "Search for restaurant transactions in March",
            "Find all transactions with 'subscription' in the description"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "amount_min",
            "amount_max",
            "category",
            "date_range",
            "description"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?transaction ?date ?amount ?currency ?merchant_name ?description\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Optional transaction description\n  OPTIONAL { ?transaction rdfs:label ?description }\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  # Filter by amount if specified\n  {{#if amount_min}}\n  FILTER(?amount >= {{amount_min}})\n  {{/if}}\n  \n  {{#if amount_max}}\n  FILTER(?amount <= {{amount_max}})\n  {{/if}}\n  \n  # Filter by date range if specified\n  {{#if date_range}}\n  FILTER(?date >= \"{{date_range.start}}\"^^xsd:date && ?date <= \"{{date_range.end}}\"^^xsd:date)\n  {{/if}}\n  \n  # Filter by description text if specified\n  {{#if description}}\n  FILTER(CONTAINS(LCASE(?description), LCASE(\"{{description}}\")))\n  {{/if}}\n  \n  # Filter by category if specified\n  {{#if category}}\n  # Get receipt information for category filtering\n  OPTIONAL {\n    ?transaction exs:hasReceipt ?receipt .\n    ?receipt exs:hasLineItem ?lineItem .\n    ?lineItem exs:hasProduct ?product .\n    ?product exs:category ?productCategory .\n    \n    # Navigate up the category hierarchy if needed\n    ?productCategory rdfs:label ?categoryLabel .\n    OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nORDER BY DESC(?date)\nLIMIT {{limit|default:50}}",
        "response_template": "Found Transactions:\n{{#each transactions}}\n- {{date}}: {{amount}} {{currency}} at {{merchant_name}}{{#if description}} - {{description}}{{/if}}\n{{/each}}\n\nTotal: {{count}} transactions, {{total_amount}} {{currency}}"
    },
    {
        "name": "merchant_spending_analysis",
        "description": "To analyze spending patterns by merchant",
        "example_queries": [
            "Where do I spend the most money?",
            "Which store costs me the most each month?",
            "What are my top merchants by spending?",
            "Show me my spending breakdown by merchant",
            "Which shops do I spend most at?"
        ],
        "required_parameters": [
            "customer_id"
        ],
        "optional_parameters": [
            "time_period",
            "top_n",
            "min_transactions"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?merchant_name (SUM(?amount) AS ?total_spent) (COUNT(?transaction) AS ?transaction_count) (MIN(?date) AS ?first_transaction) (MAX(?date) AS ?last_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?merchant_name\n{{#if min_transactions}}\nHAVING (COUNT(?transaction) >= {{min_transactions}})\n{{/if}}\nORDER BY DESC(?total_spent)\n{{#if top_n}}\nLIMIT {{top_n}}\n{{else}}\nLIMIT 10\n{{/if}}",
        "response_template": "Top Merchants by Spending:\n{{#each merchants}}\n- {{merchant_name}}: {{total_spent}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\nTotal analyzed: {{total_merchants}} merchants, {{total_transactions}} transactions"
    },
    {
        "name": "time_based_spending",
        "description": "To analyze spending over specific time periods",
        "example_queries": [
            "How much did I spend last month?",
            "Compare my spending between January and February",
            "What was my total spending in Q1?",
            "Show me my weekly spending trend",
            "How has my spending changed this year?"
        ],
        "required_parameters": [
            "customer_id",
            "time_period1"
        ],
        "optional_parameters": [
            "time_period2",
            "category",
            "account_id",
            "interval"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if time_period2}}\n# Comparative analysis between two time periods\nSELECT \n  ?period \n  (SUM(?amount) AS ?total_spent) \n  (COUNT(?transaction) AS ?transaction_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by time periods and tag with period label\n  {\n    # First time period\n    FILTER(?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date)\n    BIND(\"Period 1 ({{time_period1.label}})\" AS ?period)\n  } UNION {\n    # Second time period\n    FILTER(?date >= \"{{time_period2.start}}\"^^xsd:date && ?date <= \"{{time_period2.end}}\"^^xsd:date)\n    BIND(\"Period 2 ({{time_period2.label}})\" AS ?period)\n  }\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nGROUP BY ?period\nORDER BY ?period\n\n{{else}}\n{{#if interval}}\n# Time series analysis with specific interval\nSELECT \n  ?interval_label \n  (SUM(?amount) AS ?total_spent) \n  (COUNT(?transaction) AS ?transaction_count) \n  (MIN(?date) AS ?interval_start) \n  (MAX(?date) AS ?interval_end)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by overall time period\n  FILTER(?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date)\n  \n  # Create interval labels based on the specified interval\n  {{#if_eq interval \"day\"}}\n  BIND(CONCAT(\"Day \", STR(DAY(?date)), \", \", STR(MONTH(?date)), \"/\", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"week\"}}\n  BIND(CONCAT(\"Week of \", STR(DAY(?date) - (DAY(?date) % 7)), \"/\", STR(MONTH(?date)), \"/\", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"month\"}}\n  BIND(CONCAT(\"Month \", STR(MONTH(?date)), \"/\", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"quarter\"}}\n  BIND(CONCAT(\"Q\", STR(CEIL(MONTH(?date) / 3)), \" \", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"year\"}}\n  BIND(CONCAT(\"Year \", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nGROUP BY ?interval_label\nORDER BY ?interval_start\n\n{{else}}\n# Single time period analysis\nSELECT \n  (SUM(?amount) AS ?total_spent) \n  (COUNT(?transaction) AS ?transaction_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction) \n  (AVG(?amount) AS ?avg_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by time period\n  FILTER(?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date)\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\n{{/if}}\n{{/if}}",
        "response_template": "{{#if time_period2}}\nSpending Comparison:\n{{#each periods}}\n- {{period}}: {{total_spent}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\nDifference: {{difference}} CHF ({{percentage}}% {{increase_decrease}})\n{{else}}\n{{#if interval}}\nSpending by {{interval}} from {{time_period1.label}}:\n{{#each intervals}}\n- {{interval_label}}: {{total_spent}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\nTotal: {{total_spent}} CHF across {{total_intervals}} {{interval}}s\n{{else}}\nSpending for {{time_period1.label}}:\n- Total spent: {{total_spent}} CHF\n- Number of transactions: {{transaction_count}}\n- Average transaction: {{avg_transaction}} CHF\n- Period: {{first_transaction}} to {{last_transaction}}\n{{#if category}}\n- Category: {{category}}\n{{/if}}\n{{/if}}\n{{/if}}"
    },
    {
        "name": "recurring_expenses",
        "description": "To identify and analyze regular expenses",
        "example_queries": [
            "What are my monthly subscriptions?",
            "Show my recurring payments",
            "Which bills do I pay regularly?",
            "Find my recurring expenses",
            "What services am I subscribed to?"
        ],
        "required_parameters": [
            "customer_id",
            "frequency"
        ],
        "optional_parameters": [
            "min_occurrences",
            "category",
            "time_period"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?merchant_name \n  (COUNT(?transaction) AS ?occurrence_count) \n  (AVG(?amount) AS ?average_amount) \n  (MIN(?date) AS ?first_occurrence) \n  (MAX(?date) AS ?last_occurrence)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nGROUP BY ?merchant_name\n\n# Filter for recurring patterns based on frequency and minimum occurrences\n{{#if_eq frequency \"monthly\"}}\nHAVING (COUNT(?transaction) >= {{min_occurrences|default:3}}) \n  AND (MAX(?date) - MIN(?date)) >= \"P90D\"^^xsd:duration\n  # Detect monthly pattern - we need at least 3 months worth of data\n{{/if_eq}}\n\n{{#if_eq frequency \"weekly\"}}\nHAVING (COUNT(?transaction) >= {{min_occurrences|default:4}}) \n  AND (MAX(?date) - MIN(?date)) >= \"P28D\"^^xsd:duration\n  # Detect weekly pattern - we need at least 4 weeks worth of data\n{{/if_eq}}\n\n{{#if_eq frequency \"biweekly\"}}\nHAVING (COUNT(?transaction) >= {{min_occurrences|default:3}}) \n  AND (MAX(?date) - MIN(?date)) >= \"P42D\"^^xsd:duration\n  # Detect biweekly pattern - we need at least 6 weeks worth of data\n{{/if_eq}}\n\n{{#if_eq frequency \"quarterly\"}}\nHAVING (COUNT(?transaction) >= {{min_occurrences|default:2}}) \n  AND (MAX(?date) - MIN(?date)) >= \"P180D\"^^xsd:duration\n  # Detect quarterly pattern - we need at least 6 months worth of data\n{{/if_eq}}\n\n{{#if_eq frequency \"yearly\"}}\nHAVING (COUNT(?transaction) >= {{min_occurrences|default:2}}) \n  AND (MAX(?date) - MIN(?date)) >= \"P365D\"^^xsd:duration\n  # Detect yearly pattern - we need at least a year worth of data\n{{/if_eq}}\n\nORDER BY DESC(?average_amount)",
        "response_template": "{{frequency}} Recurring Expenses:\n{{#each expenses}}\n- {{merchant_name}}: {{average_amount}} CHF ({{occurrence_count}} occurrences)\n  First seen: {{first_occurrence}}, Last seen: {{last_occurrence}}\n{{/each}}\n\nTotal recurring expenses: {{total_amount}} CHF per {{frequency_unit}}"
    },
    {
        "name": "category_spending",
        "description": "To analyze spending by product category",
        "example_queries": [
            "How much do I spend on groceries?",
            "What's my food budget look like?",
            "Show my spending on electronics",
            "How much have I spent on household items?",
            "What are my biggest expense categories?"
        ],
        "required_parameters": [
            "customer_id",
            "category"
        ],
        "optional_parameters": [
            "time_period",
            "account_id",
            "sub_categories"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if sub_categories}}\n# Spending breakdown by sub-categories\nSELECT \n  ?category_name \n  (SUM(?item_amount) AS ?total_spent) \n  (COUNT(DISTINCT ?transaction) AS ?transaction_count) \n  (COUNT(?lineItem) AS ?item_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Main category filter\n  ?productCategory rdfs:label ?tempLabel .\n  FILTER(CONTAINS(LCASE(?tempLabel), LCASE(\"{{category}}\")))\n  \n  # Find sub-categories for breakdown\n  OPTIONAL {\n    ?productCategory exs:hasSubCategory ?subCategory .\n    ?subCategory rdfs:label ?sub_category_name .\n    BIND(?sub_category_name AS ?category_name)\n  }\n  \n  # If no sub-category is found, use the main category name\n  BIND(COALESCE(?category_name, ?tempLabel) AS ?category_name)\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?category_name\nORDER BY DESC(?total_spent)\n\n{{else}}\n# Total spending in the category\nSELECT \n  (SUM(?item_amount) AS ?total_spent) \n  (COUNT(DISTINCT ?transaction) AS ?transaction_count) \n  (COUNT(?lineItem) AS ?item_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information and filter\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\n{{/if}}",
        "response_template": "{{#if sub_categories}}\nSpending on {{category}} by sub-category:\n{{#each sub_categories}}\n- {{category_name}}: {{total_spent}} CHF ({{transaction_count}} transactions, {{item_count}} items)\n{{/each}}\n\nTotal: {{total_spent}} CHF across {{sub_category_count}} sub-categories\n{{else}}\nSpending on {{category}}:\n- Total spent: {{total_spent}} CHF\n- Number of transactions: {{transaction_count}}\n- Number of items: {{item_count}}\n- Period: {{first_transaction}} to {{last_transaction}}\n{{#if time_period}}\n- Time period: {{time_period.label}}\n{{/if}}\n{{/if}}"
    },
    {
        "name": "product_purchase_history",
        "description": "To find purchase history for specific products",
        "example_queries": [
            "When did I last buy coffee?",
            "How often do I purchase milk?",
            "Show me all my bread purchases",
            "Where do I usually buy toilet paper?",
            "How much have I spent on pasta this year?"
        ],
        "required_parameters": [
            "customer_id",
            "product_name"
        ],
        "optional_parameters": [
            "time_period",
            "merchant"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?date \n  ?product_name \n  ?merchant_name \n  ?item_amount \n  ?quantity \n  ?receipt_id\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get merchant information\n  ?transaction exs:hasParticipant ?payeeRole .\n  ?payeeRole a exs:Payee .\n  ?payeeRole exs:isPlayedBy ?merchant .\n  ?merchant rdfs:label ?merchant_name .\n  \n  {{#if merchant}}\n  # Filter by merchant if specified\n  FILTER(CONTAINS(LCASE(?merchant_name), LCASE(\"{{merchant}}\")))\n  {{/if}}\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  BIND(STRAFTER(STR(?receipt), \"https://static.rwpz.net/spendcast/\") AS ?receipt_id)\n  ?receipt exs:hasLineItem ?lineItem .\n  \n  # Get product information\n  ?lineItem exs:hasProduct ?product .\n  ?product rdfs:label ?product_name .\n  \n  # Filter by product name\n  FILTER(CONTAINS(LCASE(?product_name), LCASE(\"{{product_name}}\")))\n  \n  # Get price and quantity information\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  OPTIONAL { ?lineItem exs:quantity ?quantity }\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nORDER BY DESC(?date)",
        "response_template": "Purchase History for '{{product_name}}':\n{{#each purchases}}\n- {{date}}: {{product_name}} ({{quantity|default:1}}x) at {{merchant_name}} - {{item_amount}} CHF\n{{/each}}\n\nSummary:\n- Total purchases: {{purchase_count}}\n- Total spent: {{total_amount}} CHF\n- Average price: {{avg_price}} CHF\n- Purchase frequency: Every {{purchase_frequency}} days on average\n- Most common store: {{most_common_merchant}} ({{merchant_purchase_count}} purchases)"
    },
    {
        "name": "spending_trends",
        "description": "To compare spending across different categories",
        "example_queries": [
            "Do I spend more on food or transportation?",
            "Compare my grocery and restaurant spending",
            "Which costs more, entertainment or clothing?",
            "How does my electronics spending compare to household items?",
            "Is my budget higher for utilities or subscriptions?"
        ],
        "required_parameters": [
            "customer_id",
            "category1",
            "category2"
        ],
        "optional_parameters": [
            "time_period",
            "include_subcategories"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n# First category\nSELECT \n  (\"{{category1}}\" AS ?category) \n  (SUM(?item_amount) AS ?total_spent) \n  (COUNT(DISTINCT ?transaction) AS ?transaction_count) \n  (COUNT(?lineItem) AS ?item_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information and filter\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category1 or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category1}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category1}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\n\nUNION\n\n# Second category\nSELECT \n  (\"{{category2}}\" AS ?category) \n  (SUM(?item_amount) AS ?total_spent) \n  (COUNT(DISTINCT ?transaction) AS ?transaction_count) \n  (COUNT(?lineItem) AS ?item_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information and filter\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category2 or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category2}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category2}}\")))\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\n\n{{#if include_subcategories}}\nUNION\n\n# Subcategory breakdown for category1\nSELECT \n  ?subcategory_name \n  (SUM(?item_amount) AS ?subcategory_spent) \n  (\"{{category1}}\" AS ?parent_category)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy and filter for category1\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category1}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category1}}\")))\n  \n  # Get subcategory name\n  BIND(COALESCE(?categoryLabel, ?parentCategoryLabel) AS ?subcategory_name)\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?subcategory_name\nORDER BY DESC(?subcategory_spent)\nLIMIT 5\n\nUNION\n\n# Subcategory breakdown for category2\nSELECT \n  ?subcategory_name \n  (SUM(?item_amount) AS ?subcategory_spent) \n  (\"{{category2}}\" AS ?parent_category)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?item_amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy and filter for category2\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category2}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category2}}\")))\n  \n  # Get subcategory name\n  BIND(COALESCE(?categoryLabel, ?parentCategoryLabel) AS ?subcategory_name)\n  \n  {{#if time_period}}\n  # Filter by time period if specified\n  FILTER(?date >= \"{{time_period.start}}\"^^xsd:date && ?date <= \"{{time_period.end}}\"^^xsd:date)\n  {{/if}}\n}\nGROUP BY ?subcategory_name\nORDER BY DESC(?subcategory_spent)\nLIMIT 5\n{{/if}}",
        "response_template": "Category Comparison{{#if time_period}} for {{time_period.label}}{{/if}}:\n\n{{category1}}: {{category1_spent}} CHF ({{category1_transactions}} transactions, {{category1_items}} items)\n{{category2}}: {{category2_spent}} CHF ({{category2_transactions}} transactions, {{category2_items}} items)\n\nDifference: {{difference}} CHF ({{percentage}}% {{higher_category}} is higher)\n\n{{#if include_subcategories}}\nTop subcategories for {{category1}}:\n{{#each category1_subcategories}}\n- {{subcategory_name}}: {{subcategory_spent}} CHF\n{{/each}}\n\nTop subcategories for {{category2}}:\n{{#each category2_subcategories}}\n- {{subcategory_name}}: {{subcategory_spent}} CHF\n{{/each}}\n{{/if}}\n\nInsight: {{insight}}"
    },
    {
        "name": "spending_trends",
        "description": "To identify spending trends over time",
        "example_queries": [
            "How has my spending changed this year?",
            "Am I spending more or less on entertainment?",
            "Show me my monthly spending trends",
            "Is my grocery spending increasing over time?",
            "How are my expenses evolving?"
        ],
        "required_parameters": [
            "customer_id",
            "time_period1",
            "time_period2"
        ],
        "optional_parameters": [
            "category",
            "interval",
            "include_trend_analysis"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n{{#if interval}}\n# Time series analysis with specific interval\nSELECT \n  ?interval_label \n  (SUM(?amount) AS ?total_spent) \n  (COUNT(?transaction) AS ?transaction_count) \n  (MIN(?date) AS ?interval_start) \n  (MAX(?date) AS ?interval_end)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by extended time period (combining period1 and period2)\n  FILTER(\n    (?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date) ||\n    (?date >= \"{{time_period2.start}}\"^^xsd:date && ?date <= \"{{time_period2.end}}\"^^xsd:date)\n  )\n  \n  # Create interval labels based on the specified interval\n  {{#if_eq interval \"day\"}}\n  BIND(CONCAT(\"Day \", STR(DAY(?date)), \", \", STR(MONTH(?date)), \"/\", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"week\"}}\n  BIND(CONCAT(\"Week of \", STR(DAY(?date) - (DAY(?date) % 7)), \"/\", STR(MONTH(?date)), \"/\", STR(YEAR(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"month\"}}\n  BIND(CONCAT(STR(YEAR(?date)), \"-\", STR(MONTH(?date))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"quarter\"}}\n  BIND(CONCAT(STR(YEAR(?date)), \"-Q\", STR(CEIL(MONTH(?date) / 3))) AS ?interval_label)\n  {{/if_eq}}\n  {{#if_eq interval \"year\"}}\n  BIND(STR(YEAR(?date)) AS ?interval_label)\n  {{/if_eq}}\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nGROUP BY ?interval_label\nORDER BY ?interval_start\n\n{{else}}\n# Simple period comparison\nSELECT \n  ?period \n  (SUM(?amount) AS ?total_spent) \n  (COUNT(?transaction) AS ?transaction_count) \n  (MIN(?date) AS ?first_transaction) \n  (MAX(?date) AS ?last_transaction) \n  (AVG(?amount) AS ?avg_transaction)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  \n  # Get transaction details\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  ?amount_uri exs:hasCurrency ?currency .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Filter by time periods and tag with period label\n  {\n    # First time period\n    FILTER(?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date)\n    BIND(\"{{time_period1.label}}\" AS ?period)\n  } UNION {\n    # Second time period\n    FILTER(?date >= \"{{time_period2.start}}\"^^xsd:date && ?date <= \"{{time_period2.end}}\"^^xsd:date)\n    BIND(\"{{time_period2.label}}\" AS ?period)\n  }\n  \n  {{#if category}}\n  # Filter by category if specified\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?product exs:category ?productCategory .\n  \n  # Navigate up the category hierarchy if needed\n  ?productCategory rdfs:label ?categoryLabel .\n  OPTIONAL { ?productCategory exs:parentCategory* ?parentCategory . ?parentCategory rdfs:label ?parentCategoryLabel }\n  \n  # Filter by category or its parents\n  FILTER(CONTAINS(LCASE(?categoryLabel), LCASE(\"{{category}}\")) || CONTAINS(LCASE(?parentCategoryLabel), LCASE(\"{{category}}\")))\n  {{/if}}\n}\nGROUP BY ?period\nORDER BY ?period\n\n{{#if include_trend_analysis}}\nUNION\n\n# Category trend analysis - top growing/declining categories\nSELECT \n  ?category_name \n  (SUM(IF(?is_period1, ?amount, 0)) AS ?period1_spent) \n  (SUM(IF(?is_period2, ?amount, 0)) AS ?period2_spent) \n  ((SUM(IF(?is_period2, ?amount, 0)) - SUM(IF(?is_period1, ?amount, 0))) AS ?change_amount)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  # Find transactions with receipts\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:hasParticipant ?payerRole .\n  ?payerRole a exs:Payer .\n  ?payerRole exs:isPlayedBy ?account .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get receipt information\n  ?transaction exs:hasReceipt ?receipt .\n  ?receipt exs:hasLineItem ?lineItem .\n  ?lineItem exs:hasProduct ?product .\n  ?lineItem exs:hasPrice ?price_uri .\n  ?price_uri exs:amount ?amount .\n  \n  # Get product category information\n  ?product exs:category ?productCategory .\n  ?productCategory rdfs:label ?category_name .\n  \n  # Tag with period markers\n  BIND(?date >= \"{{time_period1.start}}\"^^xsd:date && ?date <= \"{{time_period1.end}}\"^^xsd:date AS ?is_period1)\n  BIND(?date >= \"{{time_period2.start}}\"^^xsd:date && ?date <= \"{{time_period2.end}}\"^^xsd:date AS ?is_period2)\n  \n  # Filter to include only transactions from either period\n  FILTER(?is_period1 || ?is_period2)\n}\nGROUP BY ?category_name\nHAVING (SUM(IF(?is_period1, ?amount, 0)) > 0 || SUM(IF(?is_period2, ?amount, 0)) > 0)\nORDER BY DESC(ABS(?change_amount))\nLIMIT 5\n{{/if}}\n{{/if}}",
        "response_template": "{{#if interval}}\nSpending Trend Over Time{{#if category}} for {{category}}{{/if}}:\n\n{{#each intervals}}\n- {{interval_label}}: {{total_spent}} CHF ({{transaction_count}} transactions)\n{{/each}}\n\nTrend Analysis:\n- Average monthly change: {{avg_monthly_change}} CHF\n- Overall trend: {{trend_direction}} by {{trend_percentage}}% from start to end\n- Highest spending: {{max_interval}} ({{max_spent}} CHF)\n- Lowest spending: {{min_interval}} ({{min_spent}} CHF)\n\n{{else}}\nSpending Comparison{{#if category}} for {{category}}{{/if}}:\n\n- {{period1}}: {{period1_spent}} CHF ({{period1_transactions}} transactions)\n- {{period2}}: {{period2_spent}} CHF ({{period2_transactions}} transactions)\n\nChange: {{change_amount}} CHF ({{change_percentage}}% {{increase_decrease}})\n\n{{#if include_trend_analysis}}\nTop changing categories:\n{{#each category_trends}}\n- {{category_name}}: {{change_direction}} by {{change_amount}} CHF ({{change_percentage}}%)\n{{/each}}\n{{/if}}\n\nInsight: {{insight}}\n{{/if}}"
    },
    {
        "name": "balance_projection",
        "description": "To project account balances based on recurring transactions",
        "example_queries": [
            "How much will I have at the end of the month?",
            "Project my balance for next week",
            "What will my account balance be on August 30?",
            "Predict my checking account balance next month",
            "Will I have enough money by the end of the month?"
        ],
        "required_parameters": [
            "customer_id",
            "projection_date"
        ],
        "optional_parameters": [
            "account_id",
            "include_pending",
            "include_recurring"
        ],
        "sparql_template": "PREFIX exs: <https://static.rwpz.net/spendcast/schema#>\nPREFIX ex: <https://static.rwpz.net/spendcast/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n# Query 1: Get current account balances\nSELECT \n  ?account \n  ?account_type \n  ?account_name \n  ?current_balance \n  ?currency\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Get account type and details\n  ?account a ?account_type_uri .\n  BIND(STRAFTER(STR(?account_type_uri), \"https://static.rwpz.net/spendcast/schema#\") AS ?account_type)\n  OPTIONAL { ?account rdfs:label ?account_name }\n  OPTIONAL { ?account exs:accountNumber ?account_number }\n  \n  # Get current balance\n  ?account exs:hasBalance ?balance_uri .\n  ?balance_uri exs:amount ?current_balance .\n  ?balance_uri exs:hasCurrency ?currency_uri .\n  ?currency_uri rdfs:label ?currency .\n}\n\nUNION\n\n# Query 2: Get pending transactions\n{{#if include_pending}}\nSELECT \n  ?account \n  (SUM(IF(?is_outgoing, -?amount, ?amount)) AS ?pending_net_change)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find pending transactions\n  ?transaction a exs:FinancialTransaction .\n  ?transaction exs:status exs:Pending .\n  ?transaction exs:hasTransactionDate ?date .\n  \n  # Get amount\n  ?transaction exs:hasMonetaryAmount ?amount_uri .\n  ?amount_uri exs:amount ?amount .\n  \n  # Determine if transaction is outgoing or incoming\n  {\n    # Check if account is payer (outgoing)\n    ?transaction exs:hasParticipant ?payerRole .\n    ?payerRole a exs:Payer .\n    ?payerRole exs:isPlayedBy ?account .\n    BIND(true AS ?is_outgoing)\n  } UNION {\n    # Check if account is payee (incoming)\n    ?transaction exs:hasParticipant ?payeeRole .\n    ?payeeRole a exs:Payee .\n    ?payeeRole exs:isPlayedBy ?account .\n    BIND(false AS ?is_outgoing)\n  }\n  \n  # Filter for pending transactions that will clear by projection date\n  FILTER(?date <= \"{{projection_date}}\"^^xsd:date)\n}\nGROUP BY ?account\n{{/if}}\n\nUNION\n\n# Query 3: Project recurring transactions\n{{#if include_recurring}}\nSELECT \n  ?account \n  ?recurring_type \n  (SUM(IF(?is_outgoing, -?avg_amount, ?avg_amount)) AS ?projected_recurring_change) \n  (COUNT(?pattern) AS ?pattern_count)\nWHERE {\n  # Find the customer\n  ?customer exs:hasName \"{{customer_name}}\" .\n  \n  # Get their accounts\n  ?customer exs:hasAccount ?account .\n  \n  {{#if account_id}}\n  # Filter by account ID if specified\n  FILTER(STR(?account) = \"{{account_id}}\")\n  {{/if}}\n  \n  # Find recurring transaction patterns\n  {\n    SELECT \n      ?account \n      ?merchant \n      ?is_outgoing \n      (AVG(?amount) AS ?avg_amount) \n      (MIN(?interval_days) AS ?min_interval) \n      (MAX(?interval_days) AS ?max_interval) \n      (COUNT(?transaction) AS ?occurrence_count) \n      (MIN(?date) AS ?first_occurrence) \n      (MAX(?date) AS ?last_occurrence) \n      (CONCAT(STR(?merchant), IF(?is_outgoing, \"-out\", \"-in\")) AS ?pattern)\n      (IF(ABS(?max_interval - ?min_interval) < 5, \"Regular\", \"Irregular\") AS ?recurring_type)\n    WHERE {\n      # Find the customer\n      ?customer exs:hasName \"{{customer_name}}\" .\n      \n      # Get their accounts\n      ?customer exs:hasAccount ?account .\n      \n      # Get transactions for this account\n      ?transaction a exs:FinancialTransaction .\n      ?transaction exs:hasTransactionDate ?date .\n      \n      # Get amount\n      ?transaction exs:hasMonetaryAmount ?amount_uri .\n      ?amount_uri exs:amount ?amount .\n      \n      # Determine if transaction is outgoing or incoming and get merchant\n      {\n        # Outgoing transactions\n        ?transaction exs:hasParticipant ?payerRole .\n        ?payerRole a exs:Payer .\n        ?payerRole exs:isPlayedBy ?account .\n        \n        ?transaction exs:hasParticipant ?payeeRole .\n        ?payeeRole a exs:Payee .\n        ?payeeRole exs:isPlayedBy ?merchant .\n        \n        BIND(true AS ?is_outgoing)\n      } UNION {\n        # Incoming transactions\n        ?transaction exs:hasParticipant ?payeeRole .\n        ?payeeRole a exs:Payee .\n        ?payeeRole exs:isPlayedBy ?account .\n        \n        ?transaction exs:hasParticipant ?payerRole .\n        ?payerRole a exs:Payer .\n        ?payerRole exs:isPlayedBy ?merchant .\n        \n        BIND(false AS ?is_outgoing)\n      }\n      \n      # Calculate days between transactions (self-join)\n      {\n        SELECT \n          ?account ?merchant ?is_outgoing \n          ?transaction ?date ?amount\n          (MIN(?days_diff) AS ?interval_days)\n        WHERE {\n          # Get this transaction's date\n          ?transaction exs:hasTransactionDate ?date .\n          \n          # Get prior transaction with same merchant and direction\n          ?prior_transaction a exs:FinancialTransaction .\n          ?prior_transaction exs:hasTransactionDate ?prior_date .\n          \n          # Same merchant and direction pattern as the main query\n          {\n            # Outgoing pattern\n            ?prior_transaction exs:hasParticipant ?prior_payerRole .\n            ?prior_payerRole a exs:Payer .\n            ?prior_payerRole exs:isPlayedBy ?account .\n            \n            ?prior_transaction exs:hasParticipant ?prior_payeeRole .\n            ?prior_payeeRole a exs:Payee .\n            ?prior_payeeRole exs:isPlayedBy ?merchant .\n            \n            FILTER(?is_outgoing = true)\n          } UNION {\n            # Incoming pattern\n            ?prior_transaction exs:hasParticipant ?prior_payeeRole .\n            ?prior_payeeRole a exs:Payee .\n            ?prior_payeeRole exs:isPlayedBy ?account .\n            \n            ?prior_transaction exs:hasParticipant ?prior_payerRole .\n            ?prior_payerRole a exs:Payer .\n            ?prior_payerRole exs:isPlayedBy ?merchant .\n            \n            FILTER(?is_outgoing = false)\n          }\n          \n          # Only consider prior dates\n          FILTER(?prior_date < ?date)\n          \n          # Calculate days difference\n          BIND(DAY(?date) - DAY(?prior_date) AS ?days_diff)\n        }\n        GROUP BY ?account ?merchant ?is_outgoing ?transaction ?date ?amount\n      }\n    }\n    # Group by account, merchant, and direction to identify patterns\n    GROUP BY ?account ?merchant ?is_outgoing ?pattern ?recurring_type\n    # Must have occurred at least 3 times to be considered recurring\n    HAVING (COUNT(?transaction) >= 3 && MAX(?date) >= \"{{projection_date}}\"^^xsd:date - \"P90D\"^^xsd:duration)\n  }\n  \n  # Calculate how many occurrences to project\n  BIND(CEIL((\"{{projection_date}}\"^^xsd:date - ?last_occurrence) / ?min_interval) AS ?occurrences_to_project)\n  \n  # Only include patterns that are due before the projection date\n  FILTER(?occurrences_to_project > 0 && ?occurrences_to_project <= 2) # Limit to likely occurrences\n}\nGROUP BY ?account ?recurring_type\n{{/if}}",
        "response_template": "Balance Projection for {{projection_date}}:\n\n{{#each accounts}}\n{{account_name}} ({{account_type}}):\n- Current Balance: {{current_balance}} {{currency}}\n{{#if pending_transactions}}- Pending Transactions: {{pending_net_change}} {{currency}}{{/if}}\n{{#if recurring_transactions}}- Projected Recurring Transactions: {{projected_recurring_change}} {{currency}} ({{recurring_patterns}} patterns){{/if}}\n- Projected Balance: {{projected_balance}} {{currency}}\n{{/each}}\n\nProjection Details:\n{{#if include_pending}}- Includes {{pending_count}} pending transactions{{/if}}\n{{#if include_recurring}}- Includes {{recurring_count}} projected recurring transactions{{/if}}\n- Projection Reliability: {{reliability}}\n\nInsight: {{insight}}"
    }
]
